version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Adjustments for sudo env variables
          command: |
            n=$(which node); \
            n=${n%/bin/node}; \
            chmod -R 755 $n/bin/*; \
            sudo cp -r $n/{bin,lib,share} /usr/local
            n=$(which npm); \
            n=${n%/bin/npm}; \
            chmod -R 755 $n/bin/*; \
            sudo cp -r $n/{bin,lib,share} /usr/local
      - run:
          name: Install n and update node version
          command: |
            sudo npm install -g n
            sudo n 10
            source ~/.bashrc
            nvm install 10
            nvm use 10
      - run:
          name: Check nodejs version
          command: |
            source ~/.bashrc
            nvm use 10
            node --version
            sudo node --version
      - run:
          name: Docker swarm init
          command: 'docker swarm init'
      - restore_cache:
          key: ark-e2e-{{ checksum "package.json" }}-1
      - run:
          name: Npm install
          command: 'npm install'
      - save_cache:
          key: ark-e2e-{{ checksum "package.json" }}-1
          paths:
            -  ./node_modules
      - run:
          name: Generate files
          command: |
            source ~/.bashrc
            nvm use 10
            bin/e2e generate -n e2enet -c 5
      - run:
          name: Make scripts executable
          command: 'sudo chmod +x dist/e2enet/docker*'
      - run:
          name: Docker init and start
          command: 'cd dist/e2enet && ./docker-init.sh && ./docker-start.sh && cd ../..'
      - run:
          name: Run tests
          command: sudo bin/e2e run-tests -n e2enet -s scenario1
      - run:
          name: Output results - node0
          command: |
            cat dist/e2enet/node0/output.log
            cat dist/e2enet/node0/errors.log
      - run:
          name: Output results - node1
          command: |
            cat dist/e2enet/node1/output.log
            cat dist/e2enet/node1/errors.log
      - run:
          name: Output results - node2
          command: |
            cat dist/e2enet/node2/output.log
            cat dist/e2enet/node2/errors.log
      - run:
          name: Output results - node3
          command: |
            cat dist/e2enet/node3/output.log
            cat dist/e2enet/node3/errors.log
      - run:
          name: Output results - node4
          command: |
            cat dist/e2enet/node4/output.log
            cat dist/e2enet/node4/errors.log

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
