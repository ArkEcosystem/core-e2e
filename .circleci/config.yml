version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Adjustments for sudo env variables
          command: |
            n=$(which node); \
            n=${n%/bin/node}; \
            chmod -R 755 $n/bin/*; \
            sudo cp -r $n/{bin,lib,share} /usr/local
            n=$(which npm); \
            n=${n%/bin/npm}; \
            chmod -R 755 $n/bin/*; \
            sudo cp -r $n/{bin,lib,share} /usr/local
      - run:
          name: Install n and update node version
          command: |
            sudo npm install -g n
            sudo n 10
            source ~/.bashrc
            nvm install 10
            nvm use 10
      - run:
          name: Check nodejs version
          command: |
            source ~/.bashrc
            nvm use 10
            node --version
            sudo node --version
      - run:
          name: Docker swarm init
          command: 'docker swarm init'
      - restore_cache:
          key: ark-e2e-{{ checksum "package.json" }}-1
      - run:
          name: Npm install
          command: 'npm install'
      - save_cache:
          key: ark-e2e-{{ checksum "package.json" }}-1
          paths:
            -  ./node_modules
      - run:
          name: Generate files
          command: |
            source ~/.bashrc
            nvm use 10
            node --version
            bin/e2e generate -n e2enet -c 4
      - run:
          name: Generate cache key
          command: >-
            find ./dist/e2enet/node0/packages/ -name package.json -print0 | sort -z | xargs -r0
            echo ./dist/e2enet/node0/package.json | xargs md5sum | md5sum - > checksum.txt
      - restore_cache:
          key: 'core-e2e-{{ checksum "checksum.txt" }}-0'
      - run:
          name: Make scripts executable
          command: 'sudo chmod +x dist/e2enet/docker*'
      - run:
          name: Docker init and start
          command: 'cd dist/e2enet && ./docker-init.sh && ./docker-start.sh && cd ../..'
      #- run:
       #   name: Run tests
        #  command: sudo bin/e2e run-tests -n e2enet -s scenario1
      - run:
          name: Debug cache
          command: cat checksum.txt 
      - save_cache:
          when: always
          key: 'core-e2e-{{ checksum "checksum.txt" }}-0'
          paths:
            - ./dist/e2enet/node0/packages/core/node_modules
            - ./dist/e2enet/node0/packages/core-api/node_modules
            - ./dist/e2enet/node0/packages/core-blockchain/node_modules
            - ./dist/e2enet/node0/packages/core-config/node_modules
            - ./dist/e2enet/node0/packages/core-container/node_modules
            - ./dist/e2enet/node0/packages/core-database/node_modules
            - ./dist/e2enet/node0/packages/core-database-postgres/node_modules
            - ./dist/e2enet/node0/packages/core-debugger-cli/node_modules
            - ./dist/e2enet/node0/packages/core-deployer/node_modules
            - ./dist/e2enet/node0/packages/core-elasticsearch/node_modules
            - ./dist/e2enet/node0/packages/core-error-tracker-bugsnag/node_modules
            - ./dist/e2enet/node0/packages/core-error-tracker-sentry/node_modules
            - ./dist/e2enet/node0/packages/core-event-emitter/node_modules
            - ./dist/e2enet/node0/packages/core-forger/node_modules
            - ./dist/e2enet/node0/packages/core-graphql/node_modules
            - ./dist/e2enet/node0/packages/core-http-utils/node_modules
            - ./dist/e2enet/node0/packages/core-json-rpc/node_modules
            - ./dist/e2enet/node0/packages/core-logger/node_modules
            - ./dist/e2enet/node0/packages/core-logger-winston/node_modules
            - ./dist/e2enet/node0/packages/core-p2p/node_modules
            - ./dist/e2enet/node0/packages/core-snapshots/node_modules
            - ./dist/e2enet/node0/packages/core-snapshots-cli/node_modules
            - ./dist/e2enet/node0/packages/core-test-utils/node_modules
            - ./dist/e2enet/node0/packages/core-tester-cli/node_modules
            - ./dist/e2enet/node0/packages/core-transaction-pool/node_modules
            - ./dist/e2enet/node0/packages/core-transaction-pool-mem/node_modules
            - ./dist/e2enet/node0/packages/core-utils/node_modules
            - ./dist/e2enet/node0/packages/core-vote-report/node_modules
            - ./dist/e2enet/node0/packages/core-webhooks/node_modules
            - ./dist/e2enet/node0/packages/crypto/node_modules
            - ./dist/e2enet/node0/node_modules
      - run:
          name: Output results - node0
          when: always
          command: |
            cat dist/e2enet/node0/output.log
            cat dist/e2enet/node0/errors.log
      - run:
          name: Output results - node1
          when: always
          command: |
            cat dist/e2enet/node1/output.log
            cat dist/e2enet/node1/errors.log
      - run:
          name: Output results - node2
          when: always
          command: |
            cat dist/e2enet/node2/output.log
            cat dist/e2enet/node2/errors.log
      - run:
          name: Output results - node3
          when: always
          command: |
            cat dist/e2enet/node3/output.log
            cat dist/e2enet/node3/errors.log

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
  default:
    jobs:
      - build